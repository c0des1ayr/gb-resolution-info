--- /home/c0des1ayer/Documents/Sonic/sonic3air_game/savedata/mods/erz_flight/scripts/main.lemon
+++ /home/c0des1ayer/Documents/Sonic/sonic3air_game/savedata/mods/knuckles_swim/scripts/swim.lemon
@@ -1,36 +1,18 @@
-//-------------------------------------------------------//
-// Global Values                                         //
-//-------------------------------------------------------//
-
-global u8 Setting.ERZFlight.HyperDash
-global u8 Setting.ERZFlight.DashCost
-global u8 Setting.ERZFlight.DashCooldown
-global u8 Setting.ERZFlight.DashFlash 
-//-------------------------------------------------------//
-// Player Functions                                      //
-//-------------------------------------------------------//
+// here's ya swim script
 function void Character.updateJumpMoves()
 {
-	u8 input_state     = (char.character == CHARACTER_TAILS) ? control.tails.state   : control.player1.state
-	u8 input_pressed   = (char.character == CHARACTER_TAILS) ? control.tails.pressed : control.player1.pressed
-	bool isSuperActive = (char.character == CHARACTER_TAILS) ? super.active.tails    : super.active
-	if (char.jumping) && (char.double_jump_state >= 0xF0)
+	u8 input_state     = (char.character == 1) ? control.tails.state   : control.player1.state
+	u8 input_pressed   = (char.character == 1) ? control.tails.pressed : control.player1.pressed
+	bool isSuperActive = (char.character == 1) ? super.active.tails    : super.active
+	if (char.jumping) && (char.double_jump_state >= 0xF4)
 	{
-		// Limit velocity.y
-		s16 max_vy = (char.flags & char.flag.UNDERWATER) ? -0x200 : -0x400
+		// cap velocity.y & x
+		s16 max_vy = -0x2FF
 
 		// Check if pressed jump again in mid-air
-		if (input_pressed & CONTROL_ABC)
+		if (input_pressed & 0x0070)
 		{
-			if (char.character == CHARACTER_SONIC)
-			{
-				SonicPressedJumpInMidAir()
-			}
-			else if (char.character == CHARACTER_TAILS)
-			{
-				TailsPressedJumpInMidAir()
-			}
-			else if (char.character == CHARACTER_KNUCKLES)
+			if (char.character == 2)
 			{
 				KnucklesPressedJumpInMidAir()
 			}
@@ -42,235 +24,117 @@
 	}
 }
 
-function void SonicPressedJumpInMidAir()
-{
-	if (super.active != 0)
-	{
-		if (char.double_jump_state == 0)
-		{
-			char.double_jump_state = 0xF0
-			char.velocity.y = 0
-			return
-		}
-		else if (char.double_jump_state == 0xF0) && (Setting.ERZFlight.HyperDash == 1 || Setting.ERZFlight.HyperDash == 2 && super.active & 0x80)
-		{
-			if (Setting.ERZFlight.DashCost == 0) && (ring_counter < 5)
-			{
-				return
-			}
-			else if (Setting.ERZFlight.DashCost == 0)
-			{
-				ring_counter -= 5
-			}
-			Character.ClearEnemiesOnScreen()
-
-			camera.locktime.player1 = 0x2000
-			ClearPositionBackup()
-
-			char.double_jump_state = (Setting.ERZFlight.DashCooldown == 1) ? 0xFF : char.double_jump_state
-			global.whiteflash_timeout = Setting.ERZFlight.DashFlash ? 4 : 0 
-
-			Audio.playAudio("erzdash", AudioContext.CONTEXT_SOUND)
-			Audio.playAudio("peelout_release", AudioContext.CONTEXT_SOUND)
-
-			u8 input = control.player1.state & 0x0f	// Only directions
-			if (input != 0 && input < 0x0b)		// Not left and right at the same time
-			{
-				// Perform Hyper Dash
-				A1 = 0x011afa + input * 4
-				char.velocity.x  = s16[A1]
-				char.velocity.y  = s16[A1+2]
-				char.groundspeed = s16[A1]
-			}
-			else
-			{
-				s16 vx = (char.flags & char.flag.FACING_LEFT) ? -0x800 : 0x800
-				char.velocity.x = vx
-				char.velocity.y = 0
-				char.groundspeed = vx
-			}
-		}
-		return
-	}
-	base.SonicPressedJumpInMidAir()
-}
-
-function void TailsPressedJumpInMidAir()
-{
-	if (super.active.tails != 0)
-	{
-		if (char.double_jump_state == 0)
-		{
-			char.double_jump_state = 0xF0
-			char.velocity.y = 0
-			return
-		}
-		else if (char.double_jump_state == 0xF0) && (Setting.ERZFlight.HyperDash == 1 || Setting.ERZFlight.HyperDash == 2 && super.active.tails & 0x80)
-		{
-			if (Setting.ERZFlight.DashCost == 0) && (ring_counter < 5)
-			{
-				return
-			}
-			else if (Setting.ERZFlight.DashCost == 0)
-			{
-				ring_counter -= 5
-			}
-			Character.ClearEnemiesOnScreen()
-
-			camera.locktime.player1 = 0x2000
-			ClearPositionBackup()
-
-			char.double_jump_state = (Setting.ERZFlight.DashCooldown == 1) ? 0xFF : char.double_jump_state
-			global.whiteflash_timeout = Setting.ERZFlight.DashFlash ? 4 : 0 
-
-			Audio.playAudio("erzdash", AudioContext.CONTEXT_SOUND)
-			Audio.playAudio("peelout_release", AudioContext.CONTEXT_SOUND)
-
-			u8 input = control.player1.state & 0x0f	// Only directions
-			if (input != 0 && input < 0x0b)		// Not left and right at the same time
-			{
-				// Perform Hyper Dash
-				A1 = 0x011afa + input * 4
-				char.velocity.x  = s16[A1]
-				char.velocity.y  = s16[A1+2]
-				char.groundspeed = s16[A1]
-			}
-			else
-			{
-				s16 vx = (char.flags & char.flag.FACING_LEFT) ? -0x800 : 0x800
-				char.velocity.x = vx
-				char.velocity.y = 0
-				char.groundspeed = vx
-			}
-		}
-		return
-	}
-	base.TailsPressedJumpInMidAir()
-}
-
 function void KnucklesPressedJumpInMidAir()
 {
-	if (super.active != 0)
+	if ((!(super.active)) && (char.flags & 0x40))
 	{
-		if (char.double_jump_state == 0)
+		if ((char.double_jump_state == 0x00) && (char.jumping) && (char.flags & 0x40))
 		{
-			char.double_jump_state = 0xF0
-			char.velocity.y = 0
-		}
-		else if (char.double_jump_state == 0xF0) && (Setting.ERZFlight.HyperDash == 1 || Setting.ERZFlight.HyperDash == 2 && super.active & 0x80)
-		{
-			if (Setting.ERZFlight.DashCost == 0) && (ring_counter < 5)
-			{
-				return
-			}
-			else if (Setting.ERZFlight.DashCost == 0)
-			{
-				ring_counter -= 5
-			}
-			Character.ClearEnemiesOnScreen()
-
-			camera.locktime.player1 = 0x2000
-			ClearPositionBackup()
-
-			char.double_jump_state = (Setting.ERZFlight.DashCooldown == 1) ? 0xFF : char.double_jump_state
-			global.whiteflash_timeout = Setting.ERZFlight.DashFlash ? 4 : 0 
-
-			Audio.playAudio("erzdash", AudioContext.CONTEXT_SOUND)
-			Audio.playAudio("peelout_release", AudioContext.CONTEXT_SOUND)
-
-			u8 input = control.player1.state & 0x0f	// Only directions
-			if (input != 0 && input < 0x0b)		// Not left and right at the same time
-			{
-				// Perform Hyper Dash
-				A1 = 0x011afa + input * 4
-				char.velocity.x  = s16[A1]
-				char.velocity.y  = s16[A1+2]
-				char.groundspeed = s16[A1]
-			}
-			else
-			{
-				s16 vx = (char.flags & char.flag.FACING_LEFT) ? -0x800 : 0x800
-				char.velocity.x = vx
-				char.velocity.y = 0
-				char.groundspeed = vx
-			}
+			isKnuxSwimming = 0x01
+			shouldShowTransition = 0x01
+			char.double_jump_state = 0xF4
+			char.velocity.y = 0x00
 		}
 		return
 	}
 	base.KnucklesPressedJumpInMidAir()
 }
 
-//# address-hook(0x010bba) end(0x010c8e)
-function void Character.UpdateNormalState.Sonic()
-{
-	base.Character.UpdateNormalState.Sonic()
-	if (char.double_jump_state >= 0xF0) && (super.active) // flight
-	{
-		Character.UpdateERZFlight()
-	}
-}
-
-//# address-hook(0x0137c4) end(0x0138f4)
-function void Character.UpdateNormalState.Tails()
-{
-	base.Character.UpdateNormalState.Tails()
-
-	if (char.double_jump_state >= 0xF0) && (super.active.tails) // flight
-	{
-		Character.UpdateERZFlight()
-	}
-}
-
-//# address-hook(0x01656c) end(0x016640)
+//# address-hook(0x01656c)
 function void Character.UpdateNormalState.Knuckles()
 {
 	base.Character.UpdateNormalState.Knuckles()
+	// swim
+	if ((char.double_jump_state >= 0xF4) && (char.flags & 0x40))
+	{
+		Character.FrameUpdateKnuxSwim()
+	}
+	else if ((char.double_jump_state >= 0xF4) && !(char.flags & 0x40))
+	{
+		char.double_jump_state = 0x01
+		char.state = 0x21
+		isKnuxSwimming = 0x00
+	}
+	else if ((char.base_state == 0x04) || (char.base_state == 0x0c) || (char.base_state == 0x06)) && (isKnuxSwimming)
+	{
+		char.double_jump_state = 0x00
+		char.state = (char.base_state == 0x0c) ? 0x17 : (char.base_state == 0x06) ? 0x18 : 0x1a
+		isKnuxSwimming = 0x00
+	}
+	else if (!(char.double_jump_state >= 0xF4)) && (isKnuxSwimming)
+	{
+		char.double_jump_state = 0x00
+		char.state = 0x00
+		isKnuxSwimming = 0x00
+	}
 
-	if (char.double_jump_state >= 0xF0) && (super.active) // flight
+}
+function void Character.FrameUpdateKnuxSwim()
+{
+	s16 maxvx = 0x370
+	char.flags &= ~0x10
+	char.state = 0x20
+	char.velocity.y -= 0x10 
+	char.flags &= ~0x20
+		
+	if (!(control.player1.state & CONTROL_UP)) && (!(control.player1.state & CONTROL_DOWN))
 	{
-		Character.UpdateERZFlight()
-	}
-}
-function void Character.UpdateERZFlight()
-{
-	char.flags &= ~char.flag.CONTROL_LOCK
-	// Originally coded by Bluestreak, edited by Lemons
-	char.state = char.state.RUNNING
-	char.groundspeed = (char.flags & char.flag.FACING_LEFT) ? -0x800 : 0x800
-	// reduce fall speed
-	char.velocity.y -= 0x38 
-	char.flags &= ~char.flag.PUSHING
-	if (char.flags & char.flag.UNDERWATER)
-	{
-		// Gravity
-		char.velocity.y += 0x28
-	}
-		
-	if ((control.player1.state & CONTROL_UP) == 0) && ((control.player1.state & CONTROL_DOWN) == 0)
-	{
-		if (char.velocity.y > 0x2) // sub velo for momentum reasons
+		if (char.velocity.y > 0x2)
 		{
 			char.velocity.y -= 0x8
 		}
-		else if (char.velocity.y < -0x2) // momentum reasons
+		else if (char.velocity.y < -0x2)
 		{
 			char.velocity.y += 0x8
 		}
-		else // snap it.
+		else // lock in
 		{
 			char.velocity.y = 0
 		}
 	}
-	if (control.player1.state & CONTROL_UP) //yada yada up to go up
+	if (!(control.player1.state & CONTROL_LEFT)) && (!(control.player1.state & CONTROL_RIGHT))
 	{
-		char.velocity.y -= 0x20
+		if (char.velocity.x > 0x2)
+		{
+			char.velocity.x -= 0x8
+		}
+		else if (char.velocity.x < -0x2)
+		{
+			char.velocity.x += 0x8
+		}
+		else // lock in
+		{
+			char.velocity.x = 0
+		}
 	}
-	else if (control.player1.state & CONTROL_DOWN) // get down!
+	if abs(char.velocity.x) > 0x2A || abs(char.velocity.y) > 0x2A // are you moving enough?
 	{
-		char.velocity.y += 0x20
+		shouldShowTransition = (isKnuxMoving) ? 0x00 : 0x01 // are you still moving?
+		isKnuxMoving = 0x01
 	}
-	if (char.double_jump_state > 0xF0)
+	else
 	{
-		char.double_jump_state -= 1
+		shouldShowTransition = (!(isKnuxMoving)) ? 0x00 : 0x01  // are you still idle?
+		isKnuxMoving = 0x00
+	}
+	if (control.player1.state & CONTROL_UP) // up goes up, duh
+	{
+		char.velocity.y -= 0x12
+	}
+	else if (control.player1.state & CONTROL_DOWN) // get down
+	{
+		char.velocity.y += 0x12
+	}
+	else if (control.player1.state & CONTROL_LEFT) // slide to the left
+	{
+		char.velocity.x -= (abs(char.velocity.x) > maxvx) ? 0x00 : 0x12
+	}
+	else if (control.player1.state & CONTROL_RIGHT) // slide to the right
+	{
+		char.velocity.x += (abs(char.velocity.x) > maxvx) ? 0x00 : 0x12
+	}
+	if (char.double_jump_state > 0xF4)
+	{
+		char.double_jump_state -= 0x01
 	}
 }
\ No newline at end of file
